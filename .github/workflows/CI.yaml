name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: "${{ matrix.python-version }}"
        environment-file: devtools/conda-envs/test_env.yaml
        channels: conda-forge,defaults
        activate-environment: openff-pydantic-test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
        mamba-version: "*"
        miniforge-version: latest
        miniforge-variant: Mambaforge
        use-mamba: true

    - name: Install package
      run: |
        python setup.py develop --no-deps

    - name: Environment Information
      run: |
        conda info
        conda list

    - name: Run tests
      run: |
        pytest -v --cov=openffpydantic --cov-report=xml --color=yes openffpydantic/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
